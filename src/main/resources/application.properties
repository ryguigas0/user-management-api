# debug: true
server.port=${PORT:8080}

spring.application.name=user_management_api

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=${DATASOURCE_URL:jdbc:postgresql://localhost:5432/user_management}
spring.datasource.username=root
spring.datasource.password=root

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# kafka
spring.kafka.producer.bootstrap-servers=${KAFKA_URL:localhost:29092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.group-id=group_id
topic.name.producer=logins.invalid
auto.create.topics.enable=true

# keycloak
keycloak.client-id = ${KEYCLOAK_CLIENT_ID:user-management}
keycloak.url = ${KEYCLOAK_REALM_URL:http://localhost:9090/realms/UserManagement}

# eureka
eureka.client.serviceUrl.defaultZone=${EUREKA_URL:http://localhost:8761/eureka}
eureka.instance.hostname=${EUREKA_HOST:localhost}

# spring security
spring.security.user.name = teste
spring.security.user.password = 123
spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.url}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${keycloak.url}/protocol/openid-connect/certs
logging.level.org.springframework.security=TRACE

# swagger
springdoc.swagger-ui.path=/docs/swagger